{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortField","setSortField","sortRevers","setSortRevers","visibleGoods","goods","prepearedGoods","sort","a","b","localeCompare","length","reverse","getPrepearedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"mPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAsChB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAxCR,SAA2BC,EAAOL,EAAWE,GAC3C,IAAMI,EAAc,YAAOD,GAgC3B,OA9BIL,IAAcJ,GAChBU,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQP,GACN,KAAK,EACH,OAAOO,EAAEC,cAAcF,GACzB,KAAK,EACH,OAAOA,EAAEE,cAAcD,GACzB,QACE,OAAO,MAKXT,IAAcH,GAChBS,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQP,GACN,KAAK,EACH,OAAOO,EAAEE,OAASH,EAAEG,OACtB,KAAK,EACH,OAAOH,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAO,MAKG,KAAdX,GAAoBE,GACtBI,EAAeM,UAGVN,EAOcO,CACnBlB,EAAiBK,EAAWE,GAmB9B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYhB,IAAcJ,IAEhCqB,QAAS,kBAAMhB,EAAaL,IAP9B,iCAYA,wBACEmB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYhB,IAAcH,IAEhCoB,QAAS,kBAAMhB,EAAaJ,IAP9B,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAad,IAClDe,QA9CQ,kBAEZd,GADFD,IA0CI,uBAlCc,KAAdF,IAAoBE,IA2ClB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IACbE,GAAc,IALlB,sBAcJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e3ec4d1a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPrepearedGoods(goods, sortField, sortRevers) {\n  const prepearedGoods = [...goods];\n\n  if (sortField === SORT_BY_ALPHABET) {\n    prepearedGoods.sort((a, b) => {\n      switch (sortRevers) {\n        case true:\n          return b.localeCompare(a);\n        case false:\n          return a.localeCompare(b);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortField === SORT_BY_LENGTH) {\n    prepearedGoods.sort((a, b) => {\n      switch (sortRevers) {\n        case true:\n          return b.length - a.length;\n        case false:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortField === '' && sortRevers) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [sortRevers, setSortRevers] = useState(false);\n\n  const visibleGoods = getPrepearedGoods(\n    goodsFromServer, sortField, sortRevers,\n  );\n\n  const reverse = () => (\n    sortRevers ? (\n      setSortRevers(false)\n    ) : (\n      setSortRevers(true)\n    )\n  );\n\n  const reset = () => {\n    if (sortField !== '' || sortRevers) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-info',\n              { 'is-light': sortField !== SORT_BY_ALPHABET },\n            )}\n          onClick={() => setSortField(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button is-success',\n              { 'is-light': sortField !== SORT_BY_LENGTH },\n            )}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !sortRevers })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {reset() && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField('');\n              setSortRevers(false);\n            }}\n          >\n            Reset\n          </button>\n        )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}